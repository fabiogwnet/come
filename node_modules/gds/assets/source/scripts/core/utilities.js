function getParameterByName(name, url) {
  if (!url) url = window.location.href;
  name = name.replace(/[\[\]]/g, '\\$&');
  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
      results = regex.exec(url);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

var number_to_cpf = function(value) {
	if(value) {
		cpf = $.trim(value);

		if (cpf.length == 8) { cpf = '000' + cpf; }
		if (cpf.length == 9) { cpf = '00' + cpf; }
		if (cpf.length == 10) { cpf = '0' + cpf; }

		cpf = cpf.substring(0, 3) + '.' + cpf.substring(3, 6) + '.' + cpf.substring(6, 9) + '-' + cpf.substring(9, 11);

		return cpf;
	}
};

var number_to_cnpj = function(value) {

	if(value) {
		cnpj = $.trim(value);

		if (cnpj.length == 8) { cnpj = '000000' + cnpj; }
		if (cnpj.length == 9) { cnpj = '00000' + cnpj; }
		if (cnpj.length == 11) { cnpj = '000' + cnpj; }
		if (cnpj.length == 12) { cnpj = '00' + cnpj; }
		if (cnpj.length == 13) { cnpj = '0' + cnpj; }

		cnpj = cnpj.substring(0, 2) + '.' + cnpj.substring(2, 5) + '.' + cnpj.substring(5, 8) + '/' + cnpj.substring(8, 12) + '-' + cnpj.substring(12, 14);

		return cnpj;
	}
};

var format_date = function(value, format) {
	if(typeof format == undefined) { format = 'DD/MM/YYYY'; }
	return moment(value).format(format);
};

var number_to_money = function(value) {
	if(typeof value == undefined && value != "") {
		return d3.format('$,.2f')(value);
	}
};

var char_to_gender = function(value) {
	if(value == "F") {
		return "Feminino";
	} else if(value == "M") {
		return "Masculino";
	} else {
		return value;
	}
};

var mask_phones = function(array_values, separator) {
	if(typeof separator == undefined) {
		separator = " / ";
	}

	phones = [];

	for(x=0; x<=array_values.length; x++) {
		phones.push(number_to_phone(array_values[x]));
	}

	return phones.join(separator);
};

var link_to = function(name, url, options) {
	if(typeof options == undefined) {
		options = {};
	}

	$a = $('<a/>');
	$a.html(name);
	$a.attr('href', url);

	$.each(options, function (key, val) {
		$a.attr(key, val);
	});

	return $a[0].outerHTML;
};

(function() {
  var matched, browser;

  // Use of jQuery.browser is frowned upon.
  // More details: http://api.jquery.com/jQuery.browser
  // jQuery.uaMatch maintained for back-compat
  jQuery.uaMatch = function( ua ) {
      ua = ua.toLowerCase();

      var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
          /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
          /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
          /(msie) ([\w.]+)/.exec( ua ) ||
          ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
          [];

      return {
          browser: match[ 1 ] || "",
          version: match[ 2 ] || "0"
      };
  };

  matched = jQuery.uaMatch( navigator.userAgent );
  browser = {};

  if ( matched.browser ) {
      browser[ matched.browser ] = true;
      browser.version = matched.version;
  }

  // Chrome is Webkit, but Webkit is also Safari.
  if ( browser.chrome ) {
      browser.webkit = true;
  } else if ( browser.webkit ) {
      browser.safari = true;
  }

  jQuery.browser = browser;
})();